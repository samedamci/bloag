#!/bin/sh

blog_title="samedamci's blog"
link="https://samedamci.me/blog/rss.xml"
description="Blog with my thoughts about world."
date="$(date +"%a, %d %b %Y %H:%M:%S +0200")"

init() {
printf "%s\n" \
"<rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\">
<!-- Deployed with bloag (https://git.samedamci.me/samedamci/bloag) -->
<channel>
<title>$blog_title</title>
<link>$link</link>
<description>$description</description>
<lastBuildDate>$date</lastBuildDate>
</channel>
</rss>" >"$output"
}

post_title() {
  grep -m 1 "a href=\"#[0-9].*" /tmp/bloag_site.html | \
    sed "s/.*<\/p> //g; s/<.*//g"
}

get_post_body() {
  line="$(grep -in "^ *<\/div>" /tmp/bloag_site.html | awk 'NR==1 {print $1}')"
  line2="$(head -n "${line%?}" /tmp/bloag_site.html | grep -m 1 -in \
    "<div id=\".*\" class=\"project\"" | awk 'NR==1 {print $1}'
  )"
  head -n "${line%?}" /tmp/bloag_site.html | sed "1,${line2%?}d" | \
    tee /tmp/bloag_site2.html | sed '1d; $ d' | sed 's/\//\\\//g; s/\"/\\\"/g' | \
      tr -d '\n' | sed 's/   //g; s/  / /g; s/^ //g;'
}

get_id() {
  sed 's/.*href="#//g; s/">.*//g; 1q' /tmp/bloag_site2.html
}

add_post() {
post_body="$(get_post_body)"
last_id="$([ -f "$HOME/.cache/bloag" ] && cat "$HOME/.cache/bloag")"
[ "$last_id" = "$(get_id)" ] && exit 111

sed -i "s/<\/lastBuildDate>/<\/lastBuildDate>\n\
<item>\n\
<title>$(post_title)<\/title>\n\
<description><![CDATA[\n\
$post_body\n\
]]><\/description>\n\
<pubDate>$date<\/pubDate>\n\
<\/item>/g; s/<lastBuildDate>.*<\/lastBuildDate>/\
<lastBuildDate>$date<\/lastBuildDate>/g" "$output"

get_id > "$HOME/.cache/bloag"
}

detect_input() {
  input="$1"
  if echo "$input" | grep -q "http.*\:\/\/.*"; then
    curl -s "$input" > /tmp/bloag_site.html
  else
    cp "$input" /tmp/bloag_site.html
  fi
}


help_message="
Usage: bloag [-h] [-i FILE/URL] [-o FILE]

  -i FILE/URL   Input HTML file or URL
  -o FILE       Output file
"

while getopts 'o:i:h' c
do
  case $c in
    o) output="$OPTARG";;
    i) detect_input "$OPTARG";;
    h) echo "$help_message"; exit 0;;
    [?]) echo "Invalid option, use '-h'."; exit 1;;
  esac
done

if [ ! -f "$output" ]; then
  init
  rm -f "$HOME/.cache/bloag"
  echo "Initialized new file, please run command again!"
else
  add_post
fi

rm -f /tmp/bloag*
